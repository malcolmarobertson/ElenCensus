# Get this figure: fig = py.get_figure("https://plot.ly/~LeonieKruger/0/")
# Get this figure's data: data = py.get_figure("https://plot.ly/~LeonieKruger/0/").get_data()
# Add data to this figure: py.plot(Data([Scatter(x=[1, 2], y=[2, 3])]), filename ="Exponential-Fit-with-matplotlib", fileopt="extend")
# Get y data of first trace: y1 = py.get_figure("https://plot.ly/~LeonieKruger/0/").get_data()[0]["y"]

# Get figure documentation: https://plot.ly/python/get-requests/
# Add data documentation: https://plot.ly/python/file-options/

# If you're using unicode in your file, you may need to specify the encoding.
# You can reproduce this figure in Python with the following code!

# Learn about API authentication here: https://plot.ly/python/getting-started
# Find your api_key here: https://plot.ly/settings/api

import plotly.plotly as py
from plotly.graph_objs import *
py.sign_in('username', 'api_key')
trace1 = {
  "x": [1900.0, 1910.0, 1920.0, 1930.0, 1940.0, 1950.0, 1960.0, 1970.0, 1980.0, 1990.0, 2000.0, 2010.0], 
  "y": [75.995, 91.972, 105.711, 123.203, 131.669, 150.697, 179.323, 203.212, 226.505, 249.633, 281.422, 308.746], 
  "marker": {
    "color": "#1F77B4", 
    "line": {
      "color": "#1F77B4", 
      "width": 1.0
    }, 
    "opacity": 1, 
    "size": 6.0, 
    "symbol": "dot"
  }, 
  "mode": "markers", 
  "name": "_line0", 
  "type": "scatter", 
  "xaxis": "x1", 
  "xsrc": "LeonieKruger:1:d94913", 
  "yaxis": "y1", 
  "ysrc": "LeonieKruger:1:157f63"
}
trace2 = {
  "x": [1900.0, 1901.11111111, 1902.22222222, 1903.33333333, 1904.44444444, 1905.55555556, 1906.66666667, 1907.77777778, 1908.88888889, 1910.0, 1911.11111111, 1912.22222222, 1913.33333333, 1914.44444444, 1915.55555556, 1916.66666667, 1917.77777778, 1918.88888889, 1920.0, 1921.11111111, 1922.22222222, 1923.33333333, 1924.44444444, 1925.55555556, 1926.66666667, 1927.77777778, 1928.88888889, 1930.0, 1931.11111111, 1932.22222222, 1933.33333333, 1934.44444444, 1935.55555556, 1936.66666667, 1937.77777778, 1938.88888889, 1940.0, 1941.11111111, 1942.22222222, 1943.33333333, 1944.44444444, 1945.55555556, 1946.66666667, 1947.77777778, 1948.88888889, 1950.0, 1951.11111111, 1952.22222222, 1953.33333333, 1954.44444444, 1955.55555556, 1956.66666667, 1957.77777778, 1958.88888889, 1960.0, 1961.11111111, 1962.22222222, 1963.33333333, 1964.44444444, 1965.55555556, 1966.66666667, 1967.77777778, 1968.88888889, 1970.0, 1971.11111111, 1972.22222222, 1973.33333333, 1974.44444444, 1975.55555556, 1976.66666667, 1977.77777778, 1978.88888889, 1980.0, 1981.11111111, 1982.22222222, 1983.33333333, 1984.44444444, 1985.55555556, 1986.66666667, 1987.77777778, 1988.88888889, 1990.0, 1991.11111111, 1992.22222222, 1993.33333333, 1994.44444444, 1995.55555556, 1996.66666667, 1997.77777778, 1998.88888889, 2000.0, 2001.11111111, 2002.22222222, 2003.33333333, 2004.44444444, 2005.55555556, 2006.66666667, 2007.77777778, 2008.88888889, 2010.0], 
  "y": [84.0634243884, 85.1969649797, 86.3457906284, 87.5101074436, 88.6901243137, 89.8860529436, 91.0981078931, 92.326506615, 93.5714694947, 94.8332198888, 96.1119841662, 97.407991748, 98.7214751489, 100.052670019, 101.401815186, 102.769152698, 104.154927867, 105.559389312, 106.982789006, 108.425382319, 109.887428065, 111.369188546, 112.870929604, 114.392920662, 115.93543478, 117.498748698, 119.083142886, 120.6889016, 122.316312925, 123.965668833, 125.637265233, 127.331402022, 129.048383144, 130.78851664, 132.552114704, 134.33949374, 136.15097442, 137.986881738, 139.847545072, 141.733298241, 143.644479565, 145.581431925, 147.544502828, 149.534044465, 151.550413777, 153.593972517, 155.665087318, 157.764129754, 159.891476412, 162.047508955, 164.232614195, 166.447184158, 168.691616156, 170.966312859, 173.271682367, 175.608138284, 177.976099788, 180.375991714, 182.80824462, 185.273294875, 187.771584728, 190.303562396, 192.869682134, 195.470404329, 198.10619557, 200.777528741, 203.484883102, 206.228744376, 209.009604834, 211.827963386, 214.684325669, 217.57920414, 220.513118164, 223.48659411, 226.500165445, 229.554372828, 232.649764212, 235.786894934, 238.966327823, 242.188633297, 245.454389464, 248.764182228, 252.118605394, 255.518260774, 258.963758296, 262.45571611, 265.994760704, 269.581527012, 273.21665853, 276.900807432, 280.634634685, 284.41881017, 288.2540128, 292.140930641, 296.080261042, 300.07271075, 304.118996045, 308.219842865, 312.375986937, 316.588173908], 
  "line": {
    "color": "rgba (255, 127, 14, 1)", 
    "dash": "solid", 
    "width": 1.5
  }, 
  "mode": "lines", 
  "name": "_line1", 
  "type": "scatter", 
  "xaxis": "x1", 
  "xsrc": "LeonieKruger:1:76d327", 
  "yaxis": "y1", 
  "ysrc": "LeonieKruger:1:032461"
}
data = Data([trace1, trace2])
layout = {
  "hovermode": "closest", 
  "showlegend": False, 
  "title": "Exponential Fit", 
  "titlefont": {
    "color": "#000000", 
    "size": 12.0
  }, 
  "xaxis1": {
    "anchor": "y1", 
    "domain": [0.0, 1.0], 
    "mirror": "ticks", 
    "nticks": 8, 
    "range": [1894.5, 2015.5], 
    "showgrid": False, 
    "showline": True, 
    "side": "bottom", 
    "tickfont": {"size": 10.0}, 
    "ticks": "inside", 
    "type": "linear", 
    "zeroline": False
  }, 
  "yaxis1": {
    "anchor": "x1", 
    "domain": [0.0, 1.0], 
    "mirror": "ticks", 
    "nticks": 7, 
    "range": [63.9653413046, 328.617832603], 
    "showgrid": False, 
    "showline": True, 
    "side": "left", 
    "tickfont": {"size": 10.0}, 
    "ticks": "inside", 
    "type": "linear", 
    "zeroline": False
  }
}
fig = Figure(data=data, layout=layout)
plot_url = py.plot(fig)